--see table
SELECT table_name, column_name
FROM all_tab_columns
WHERE owner = 'PURCHASE'
ORDER BY table_name, column_id;

-- 1.
SELECT c.NAME AS city_name
FROM PURCHASE.CITY c
WHERE EXISTS (
    SELECT 1
    FROM PURCHASE.CUSTOMER cust
    WHERE cust.CITY = c.CITY_ID
) AND EXISTS (
    SELECT 1
    FROM PURCHASE.SUPPLIER sup
    WHERE sup.CITY = c.CITY_ID
);

--2. 
SELECT c.name AS city_name
FROM purchase.city c
JOIN purchase.customer cust ON c.city_id = cust.city
LEFT JOIN purchase.supplier sup ON c.city_id = sup.city
WHERE sup.id IS NULL
GROUP BY c.name
HAVING COUNT(*) > 1;

--3.
SELECT po.order_no
FROM purchase.po_detail pd
JOIN purchase.purchase_order po ON pd.order_no = po.order_no
WHERE pd.prod_code = 30
GROUP BY po.order_no
HAVING COUNT(*) = 1;

--4.
SELECT po.ORDER_NO, po.CUSTOMER, po.PO_DATE, po.DELIVER_DATE
FROM PURCHASE.PURCHASE_ORDER po
JOIN PURCHASE.PO_DETAIL pod ON po.ORDER_NO = pod.ORDER_NO
JOIN PURCHASE.PRODUCT prod ON pod.PROD_CODE = prod.CODE
WHERE (prod.DESCRIPTION LIKE '%Big Screen TV%' AND prod.DESCRIPTION NOT LIKE '%PlayStation 4%')
   OR (prod.DESCRIPTION NOT LIKE '%Big Screen TV%' AND prod.DESCRIPTION LIKE '%PlayStation 4%')
GROUP BY po.ORDER_NO, po.CUSTOMER, po.PO_DATE, po.DELIVER_DATE;

--5.
SELECT COUNT(*) AS customer_count
FROM PURCHASE.CUSTOMER;

--6.
SELECT MAX(COST) AS max_price, MIN(COST) AS min_price, AVG(COST) AS mean_price
FROM PURCHASE.PRODUCT;

--7.
SELECT c.NAME AS city_name, COUNT(*) AS customer_count
FROM PURCHASE.CITY c
RIGHT JOIN PURCHASE.CUSTOMER cust ON c.CITY_ID = cust.CITY
GROUP BY c.NAME;

--8.
SELECT ORDER_NO, CUSTOMER, PO_DATE, DELIVER_DATE
FROM PURCHASE.PURCHASE_ORDER
WHERE PO_DATE >= TO_DATE('2018-04-01', 'YYYY-MM-DD')
  AND PO_DATE <= TO_DATE('2018-04-20', 'YYYY-MM-DD');

--9.
SELECT c.NAME AS city_name, COUNT(*) AS client_count
FROM PURCHASE.CITY c
JOIN PURCHASE.CUSTOMER cust ON c.CITY_ID = cust.CITY
GROUP BY c.NAME
HAVING COUNT(*) > 3;

--10.
SELECT po.PO_DATE, COUNT(*) AS order_count, SUM(pod.QTY * prod.COST) AS total_amount
FROM PURCHASE.PURCHASE_ORDER po
JOIN PURCHASE.PO_DETAIL pod ON po.ORDER_NO = pod.ORDER_NO
JOIN PURCHASE.PRODUCT prod ON pod.PROD_CODE = prod.CODE
GROUP BY po.PO_DATE;

--11.
SELECT po.ORDER_NO
FROM PURCHASE.PURCHASE_ORDER po
JOIN PURCHASE.PO_DETAIL pod ON po.ORDER_NO = pod.ORDER_NO
JOIN PURCHASE.PRODUCT prod ON pod.PROD_CODE = prod.CODE
WHERE prod.COST = (SELECT MAX(COST) FROM PURCHASE.PRODUCT);

--12.
SELECT po.ORDER_NO
FROM PURCHASE.PURCHASE_ORDER po
JOIN PURCHASE.PO_DETAIL pod ON po.ORDER_NO = pod.ORDER_NO
GROUP BY po.ORDER_NO
HAVING MIN(pod.QTY) >= 30 AND MAX(pod.QTY) > 100;

--13.
SELECT c.NAME AS customer_name
FROM PURCHASE.CUSTOMER c
WHERE (
    SELECT COUNT(DISTINCT p.CODE)
    FROM PURCHASE.PRODUCT p
    ) = (
    SELECT COUNT(DISTINCT pd.PROD_CODE)
    FROM PURCHASE.PO_DETAIL pd
    JOIN PURCHASE.PURCHASE_ORDER po ON pd.ORDER_NO = po.ORDER_NO
    WHERE po.CUSTOMER = c.CODE
    );

--14.
SELECT c.NAME AS customer_name
FROM PURCHASE.CUSTOMER c
JOIN PURCHASE.PURCHASE_ORDER po ON c.CODE = po.CUSTOMER
WHERE NOT EXISTS (
    SELECT p.SUPPLIER
    FROM PURCHASE.PRODUCT p
    JOIN PURCHASE.SUPPLIER s ON p.SUPPLIER = s.ID
    JOIN PURCHASE.CITY ct ON s.CITY = ct.CITY_ID
    LEFT JOIN (
        SELECT pd.PROD_CODE, po.CUSTOMER
        FROM PURCHASE.PO_DETAIL pd
        JOIN PURCHASE.PURCHASE_ORDER po ON pd.ORDER_NO = po.ORDER_NO
    ) pd ON p.CODE = pd.PROD_CODE AND po.CUSTOMER = pd.CUSTOMER
    WHERE ct.NAME = 'Denver'
    GROUP BY p.SUPPLIER, po.CUSTOMER
    HAVING COUNT(DISTINCT p.CODE) > COUNT(pd.PROD_CODE)
);

--15.
SELECT p.DESCRIPTION AS product_description
FROM PURCHASE.PRODUCT p
WHERE NOT EXISTS (
    SELECT c.CODE
    FROM PURCHASE.CUSTOMER c
    MINUS
    SELECT DISTINCT po.CUSTOMER
    FROM PURCHASE.PURCHASE_ORDER po
    JOIN PURCHASE.PO_DETAIL pd ON po.ORDER_NO = pd.ORDER_NO
    WHERE pd.PROD_CODE = p.CODE
)
GROUP BY p.DESCRIPTION;

--16.
SELECT c.CODE AS customer_code, c.NAME AS customer_name, c.CITY AS customer_city
FROM PURCHASE.CUSTOMER c
JOIN (
    SELECT CUSTOMER, COUNT(*) AS total_orders
    FROM PURCHASE.PURCHASE_ORDER
    GROUP BY CUSTOMER
    ORDER BY COUNT(*) DESC
    FETCH FIRST 1 ROWS ONLY
) subquery ON c.CODE = subquery.CUSTOMER;


--17.
SELECT c.NAME AS customer_name
FROM PURCHASE.CUSTOMER c
JOIN (
    SELECT po.CUSTOMER, COUNT(DISTINCT pd.PROD_CODE) AS total_products
    FROM PURCHASE.PURCHASE_ORDER po
    JOIN PURCHASE.PO_DETAIL pd ON po.ORDER_NO = pd.ORDER_NO
    GROUP BY po.CUSTOMER
    ORDER BY COUNT(DISTINCT pd.PROD_CODE) DESC
    FETCH FIRST 1 ROWS ONLY
) subquery ON c.CODE = subquery.CUSTOMER;


--18.
SELECT po.ORDER_NO AS purchase_order_number
FROM PURCHASE.PURCHASE_ORDER po
JOIN (
    SELECT pd.ORDER_NO, COUNT(DISTINCT p.SUPPLIER) AS total_unique_suppliers
    FROM PURCHASE.PO_DETAIL pd
    JOIN PURCHASE.PRODUCT p ON pd.PROD_CODE = p.CODE
    GROUP BY pd.ORDER_NO
    ORDER BY COUNT(DISTINCT p.SUPPLIER) DESC
    FETCH FIRST 1 ROWS ONLY
) subquery ON po.ORDER_NO = subquery.ORDER_NO;


--19.
SELECT ORDER_NO
FROM PURCHASE.PO_DETAIL
GROUP BY ORDER_NO
HAVING COUNT(*) > 1;


--20.
SELECT ORDER_NO
FROM (
    SELECT ORDER_NO, COUNT(DISTINCT PROD_CODE) AS supplier_count
    FROM PURCHASE.PO_DETAIL
    GROUP BY ORDER_NO
) subquery
WHERE supplier_count > 1;
